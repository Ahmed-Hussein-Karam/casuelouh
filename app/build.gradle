plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)

    id("com.google.android.libraries.mapsplatform.secrets-gradle-plugin")
}

android {
    namespace = "com.example.casuelouh"
    compileSdk 34

    defaultConfig {
        applicationId = "com.example.casuelouh"
        minSdkVersion 34

        def secretsPropertiesFile = rootProject.file("secrets.properties")
        def secretsProperties = new Properties()

        if (secretsPropertiesFile.exists()) {
            secretsProperties.load(new FileInputStream(secretsPropertiesFile))
        }

        def geminiApiKey = secretsProperties['GEMINI_API_KEY']
        vectorDrawables {
            useSupportLibrary true
        }
        if (geminiApiKey != null) {
            buildConfigField "String", "GEMINI_API_KEY", "\"${geminiApiKey}\""
        } else {
            throw new GradleException("GEMINI_API_KEY not found in secrets.properties")
        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }

    // Use the JVM toolchain to specify the Java version
    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packaging {
        resources {
            excludes.addAll(
                'META-INF/INDEX.LIST',
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt'
            )
        }
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.view

    implementation libs.ui
    implementation libs.material3

    implementation libs.okhttp
    implementation libs.google.auth.library.oauth2.http
    implementation libs.google.api.client
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android.v170
    implementation libs.play.services.auth
    implementation libs.gson

    implementation libs.generativeai
    implementation libs.kotlinx.coroutines.android
    implementation libs.androidx.lifecycle.runtime.ktx.v284
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit.v115
    androidTestImplementation libs.androidx.espresso.core.v351
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}
